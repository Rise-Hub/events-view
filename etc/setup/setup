# turn off SSH password auth and enable root user to log in
sed -i.bak '/PermitRootLogin/d' /etc/ssh/sshd_config
sed -i.bak '/PasswordAuthentication/d' /etc/ssh/sshd_config
echo PermitRootLogin yes >> /etc/ssh/sshd_config
echo PasswordAuthentication no >> /etc/ssh/sshd_config

# only add SSH key if one was passed
if [ "$1" ] ; then

  # make sure we have a place for known SSH keys
  mkdir -p ~/.ssh

  # create the authorized_keys file if it doesn't exist
  if [ ! -e ~/.ssh/authorized_keys ] ; then
    touch ~/.ssh/authorized_keys
  fi

  # add the SSH key in arg 1 to authorized_keys if not present
  if ! grep -q "$1" ~/.ssh/authorized_keys ; then
    echo $1 >> ~/.ssh/authorized_keys
  fi

fi

# restart sshd to pick up new config
service ssh restart

# update apt and pull dependencies
apt-get -y update
apt-get -y install build-essential curl nginx git

# install nvm to /usr/local/nvm and add to ~/.bashrc
curl https://raw.githubusercontent.com/creationix/nvm/v0.23.3/install.sh | NVM_DIR=/usr/local/nvm bash
echo -e 'export NVM_DIR="/usr/local/nvm"\n[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"' | cat - ~/.bashrc > /tmp/out && mv /tmp/out ~/.bashrc

# install node 0.12 and set as default, so node and npm are on the PasswordAuthentication
source ~/.bashrc
nvm install 0.12
nvm alias default 0.12

# make sure we have a /var/www directory for app deployments
mkdir -p /var/www
